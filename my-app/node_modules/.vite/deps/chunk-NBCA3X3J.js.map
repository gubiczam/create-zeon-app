{
  "version": 3,
  "sources": ["../../.pnpm/@usezeon+core@0.0.1/node_modules/@usezeon/core/src/signal.ts"],
  "sourcesContent": ["export type Cleanup = () => void;\ntype Subscriber = () => void;\n\nlet CURRENT: Subscriber | null = null;\n\nexport interface Signal<T> {\n  get(): T;\n  set(v: T): void;\n  sub(fn: Subscriber): () => void;\n}\n\nexport function signal<T>(v: T): Signal<T> {\n  let val = v;\n  const subs = new Set<Subscriber>();\n  const s: Signal<T> = {\n    get() {\n      if (CURRENT) subs.add(CURRENT);\n      return val;\n    },\n    set(n: T) {\n      if (Object.is(n, val)) return;\n      val = n;\n      subs.forEach(fn => fn());\n    },\n    sub(fn: Subscriber) {\n      subs.add(fn);\n      return () => subs.delete(fn);\n    }\n  };\n  return s;\n}\n\nexport function effect(fn: () => void): Cleanup {\n  let cleanups: Cleanup[] = [];\n  const run = () => {\n    // cleanup before rerun\n    for (const c of cleanups) c();\n    cleanups = [];\n    const prev = CURRENT;\n    CURRENT = rerun;\n    try { fn(); } finally { CURRENT = prev; }\n  };\n  const rerun = () => queueMicrotask(run);\n  run();\n  return () => { cleanups.forEach(c => c()); cleanups = []; };\n}\n\nexport function computed<T>(calc: () => T): { get(): T; sub: Signal<T>[\"sub\"] } {\n  const s = signal<T>(undefined as unknown as T);\n  effect(() => s.set(calc()));\n  return { get: () => s.get(), sub: s.sub };\n}\n"],
  "mappings": ";AAGA,IAAI,UAA6B;AAQ1B,SAAS,OAAU,GAAiB;AACzC,MAAI,MAAM;AACV,QAAM,OAAO,oBAAI,IAAgB;AACjC,QAAM,IAAe;AAAA,IACnB,MAAM;AACJ,UAAI,QAAS,MAAK,IAAI,OAAO;AAC7B,aAAO;AAAA,IACT;AAAA,IACA,IAAI,GAAM;AACR,UAAI,OAAO,GAAG,GAAG,GAAG,EAAG;AACvB,YAAM;AACN,WAAK,QAAQ,QAAM,GAAG,CAAC;AAAA,IACzB;AAAA,IACA,IAAI,IAAgB;AAClB,WAAK,IAAI,EAAE;AACX,aAAO,MAAM,KAAK,OAAO,EAAE;AAAA,IAC7B;AAAA,EACF;AACA,SAAO;AACT;AAEO,SAAS,OAAO,IAAyB;AAC9C,MAAI,WAAsB,CAAC;AAC3B,QAAM,MAAM,MAAM;AAEhB,eAAW,KAAK,SAAU,GAAE;AAC5B,eAAW,CAAC;AACZ,UAAM,OAAO;AACb,cAAU;AACV,QAAI;AAAE,SAAG;AAAA,IAAG,UAAE;AAAU,gBAAU;AAAA,IAAM;AAAA,EAC1C;AACA,QAAM,QAAQ,MAAM,eAAe,GAAG;AACtC,MAAI;AACJ,SAAO,MAAM;AAAE,aAAS,QAAQ,OAAK,EAAE,CAAC;AAAG,eAAW,CAAC;AAAA,EAAG;AAC5D;AAEO,SAAS,SAAY,MAAoD;AAC9E,QAAM,IAAI,OAAU,MAAyB;AAC7C,SAAO,MAAM,EAAE,IAAI,KAAK,CAAC,CAAC;AAC1B,SAAO,EAAE,KAAK,MAAM,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI;AAC1C;",
  "names": []
}
